{"ast":null,"code":"var _jsxFileName = \"/home/king/Documents/plantpod/web/src/component/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nasync function loginUser(creds) {\n  return fetch('http://localhost:4000/users/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(creds)\n  }).then(data => data.json());\n}\n\nexport default function Login(_ref) {\n  _s();\n\n  let {\n    setToken\n  } = _ref;\n  const [username, setUserName] = useState();\n  const [password, setPassword] = useState();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const tokenInfo = await loginUser({\n      username: username,\n      password: password\n    });\n    console.log(tokenInfo.expiredAt);\n    setToken(tokenInfo.token);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginform\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => setUserName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"mDofyeUwpW7DCqzRlXtw6aPy/HU=\");\n\n_c = Login;\nLogin.propTypes = {\n  setToken: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/king/Documents/plantpod/web/src/component/Login.js"],"names":["React","useState","PropTypes","loginUser","creds","fetch","method","headers","body","JSON","stringify","then","data","json","Login","setToken","username","setUserName","password","setPassword","handleSubmit","e","preventDefault","tokenInfo","console","log","expiredAt","token","target","value","propTypes","func","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,aAAP;;;AAEA,eAAeC,SAAf,CAAyBC,KAAzB,EAAgC;AAC5B,SAAOC,KAAK,CAAC,mCAAD,EAAsC;AAC9CC,IAAAA,MAAM,EAAE,MADsC;AAE9CC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAFqC;AAK9CC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,KAAf;AALwC,GAAtC,CAAL,CAONO,IAPM,CAODC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAPP,CAAP;AAQH;;AAED,eAAe,SAASC,KAAT,OAA6B;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AACxC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,EAAxC;AACA,QAAM,CAACiB,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,EAAxC;;AAEA,QAAMmB,YAAY,GAAG,MAAMC,CAAN,IAAW;AAC5BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,SAAS,GAAG,MAAMpB,SAAS,CAAC;AAC9Ba,MAAAA,QAAQ,EAAEA,QADoB;AAE9BE,MAAAA,QAAQ,EAAEA;AAFoB,KAAD,CAAjC;AAIAM,IAAAA,OAAO,CAACC,GAAR,CAAYF,SAAS,CAACG,SAAtB;AACAX,IAAAA,QAAQ,CAACQ,SAAS,CAACI,KAAX,CAAR;AACH,GARD;;AAUA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,QAAQ,EAAEP,YAAhB;AAAA,8BACI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,QAAQ,EAAEC,CAAC,IAAIJ,WAAW,CAACI,CAAC,CAACO,MAAF,CAASC,KAAV;AAA7C;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,QAAQ,EAAER,CAAC,IAAIF,WAAW,CAACE,CAAC,CAACO,MAAF,CAASC,KAAV;AAAjD;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eASI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,+BACI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH;;GAhCuBf,K;;KAAAA,K;AAkCxBA,KAAK,CAACgB,SAAN,GAAkB;AACdf,EAAAA,QAAQ,EAAEb,SAAS,CAAC6B,IAAV,CAAeC;AADX,CAAlB","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './Login.css';\n\nasync function loginUser(creds) {\n    return fetch('http://localhost:4000/users/login', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(creds)\n    })\n    .then(data => data.json())\n}\n\nexport default function Login({ setToken }) {\n    const [username, setUserName] = useState();\n    const [password, setPassword] = useState();\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n        const tokenInfo = await loginUser({\n            username: username,\n            password: password\n        });\n        console.log(tokenInfo.expiredAt);\n        setToken(tokenInfo.token);\n    }\n\n    return (\n        <div className=\"loginform\">\n            <h1>Login</h1>\n            <form onSubmit={handleSubmit}>\n                <label>\n                    <p>Username</p>\n                    <input type=\"text\" onChange={e => setUserName(e.target.value)}/>\n                </label>\n                <label>\n                    <p>Password</p>\n                    <input type=\"password\" onChange={e => setPassword(e.target.value)}/>\n                </label>\n                <div className=\"button\">\n                    <button type=\"submit\">Submit</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nLogin.propTypes = {\n    setToken: PropTypes.func.isRequired\n};\n"]},"metadata":{},"sourceType":"module"}